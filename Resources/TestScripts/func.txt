# test0 引数なし
func a()
endfunc
========================
# test1 引数あり
func a(a: int, b: int, c: int)
endfunc
========================
# test2 関数名に予約語を使用
func if()
endfunc
========================
# test3 変数名がかぶっている
var a: int
func b(a: int)
endfunc
========================
# test4 引数の変数名がかぶっている
func a(b: int, c: int, b: int)
endfunc
========================
# test5 funcの中にfunc
func a()
  func b()
  endfunc
endfunc
========================
# test6 同一funcを二重定義
func a()
endfunc
func b()
endfunc
func a()
endfunc
========================
# test7 戻り値テスト
func a(): void
endfunc
func b(): int
  return 1
endfunc
func c(): float
  return 1.0
endfunc
func d(): str
  return "1"
endfunc
func e(): bool
  return true
endfunc
func f(): list<int>
  return [1]
endfunc
func g(): dict<str>
  return {"1":"2"}
endfunc
========================
# test8 不正な戻り値テスト
func a() sdsds
endfunc
========================
# test9 引数の型テスト int
func a(b: int, c: float, d: str, e: bool)
endfunc
========================
# test10 引数の型テスト void
func a(b: void)
endfunc
========================
# test11 不正な引数の型テスト
func a(asas: c)
endfunc
========================
# test12 デフォルト値設定
func a(b: int = 2, c = "aaa", d: float = 1.0, e = [1], f: dict<str> = { "1": "a" })
endfunc
========================
# test13 デフォルト値が型指定と違う int
func a(b: int = true)
endfunc
========================
# test14 デフォルト値が型指定と違う float
func a(b: float = 2)
endfunc
========================
# test15 デフォルト値が型指定と違う str
func a(b: str = 2.0)
endfunc
========================
# test16 デフォルト値が型指定と違う bool
func a(b: bool = 2)
endfunc
========================
# test17 デフォルト値が型指定と違う list<int>
func a(b: list<int> = ["1"])
endfunc
========================
# test18 デフォルト値が型指定と違う dict<str>
func a(b: dict<str> = {"1": 1})
endfunc
========================
# test19 funcの実行
func a(b: int): int
  return b
endfunc
var c = a(b: 1)
========================
# test20 引数省略funcの実行
func a(b = 0): int
  return b
endfunc
var c = a(b: 1)
var d = a()
========================
# test21 引数省略複数funcの実行
func a(b = 0, c: int, d = 1): int
  return b + c + d
endfunc
var e = a(b: 1, c: 2, d: 3)
var f = a(c: 10)
========================
# test22 曖昧な場合は後勝ち
func a(b = 0): int
  return 1
endfunc
func a(): int
  return 2
endfunc
var c = a()
========================
# test23 複数でも曖昧な場合は後勝ち
func a(b = 0, c: int): int
  return 1
endfunc
func a(c: int): int
  return 2
endfunc
var d = a(c: 0)
